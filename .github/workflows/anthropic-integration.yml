name: 🤖 Anthropic SDK Integration Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/integrations/anthropic/**'
      - 'src/cli/AnthropicCLI.ts'
      - 'package.json'
      - '.env.template'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/integrations/anthropic/**'
      - 'src/cli/AnthropicCLI.ts'
      - 'package.json'
      - '.env.template'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20.x'
  CES_VERSION: '2.7.0'

jobs:
  # ===================================================================
  # JOB 1: ANTHROPIC SDK VALIDATION
  # ===================================================================
  anthropic-validation:
    name: 🤖 Anthropic SDK Validation
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci --prefer-offline

      - name: 🔍 Validate Anthropic SDK Installation
        run: |
          # Check if Anthropic SDK is properly installed
          npm list @anthropic-ai/sdk
          npm list nanospinner

      - name: 🧪 Test Anthropic Integration TypeScript Compilation
        run: |
          # Compile TypeScript specifically for Anthropic integration
          npx tsc --noEmit src/integrations/anthropic/**/*.ts
          npx tsc --noEmit src/cli/AnthropicCLI.ts

      - name: 🔧 Test Configuration Validation
        run: |
          # Test configuration loading without API key
          npm run dev -- config show --section=anthropic
          
          # Test with mock API key
          echo "Testing with mock configuration..."
          CES_ANTHROPIC_MODEL=claude-3-haiku-20240307 npm run dev -- validate

      - name: 📦 Test CLI Interface
        run: |
          # Test CLI help and validation
          npm run dev -- ai --help || true
          npm run dev -- ai stats || true

  # ===================================================================
  # JOB 2: INTEGRATION MODES TESTING
  # ===================================================================
  integration-modes:
    name: 🔄 Integration Modes Testing
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [anthropic-validation]

    strategy:
      matrix:
        mode: ['standalone', 'integrated']

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci --prefer-offline

      - name: 🏗️ Build project
        run: npm run build

      - name: 🔧 Test ${{ matrix.mode }} Mode
        run: |
          echo "Testing CES v2.7.0 in ${{ matrix.mode }} mode"
          
          # Set operation mode
          export CES_OPERATION_MODE=${{ matrix.mode }}
          
          # Test configuration validation
          npm run dev -- validate --verbose
          
          # Test path resolution
          npm run dev -- config show --section=paths
          
          # Test session management
          npm run dev -- status || true

      - name: 📊 Upload mode test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-mode-${{ matrix.mode }}-results
          path: |
            .ces-logs/
            mode-test-report-${{ matrix.mode }}.log
          retention-days: 7

  # ===================================================================
  # JOB 3: DOCUMENTATION VALIDATION
  # ===================================================================
  documentation-validation:
    name: 📚 Documentation Validation
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Validate v2.7.0 Documentation
        run: |
          # Check for version consistency
          echo "Checking version consistency in documentation..."
          
          # Validate English documentation exists
          test -f docs/library/100-introduction/100-INTRODUCTION-CES.md
          test -f docs/library/300-configuration/300-CONFIGURATION-OVERVIEW.md
          test -f docs/library/200-installation/202-QUICK-START.md
          
          # Check for Anthropic integration documentation
          grep -q "Anthropic" docs/library/100-introduction/100-INTRODUCTION-CES.md || true
          grep -q "2.7.0" docs/library/100-introduction/100-INTRODUCTION-CES.md || true
          
          # Validate examples exist
          test -f examples/anthropic-usage.ts
          
          echo "✅ Documentation validation passed"

      - name: 🔍 Check Language Consistency
        run: |
          # Ensure no Italian text remains in core files
          echo "Checking for language consistency..."
          
          # Check CLAUDE.md for English
          ! grep -i "modalità\|configurazione" CLAUDE.md || (echo "❌ Italian text found in CLAUDE.md" && exit 1)
          
          # Check package.json description
          grep -q "v2.7.0" package.json
          
          echo "✅ Language consistency check passed"

  # ===================================================================
  # JOB 4: SECURITY VALIDATION
  # ===================================================================
  security-validation:
    name: 🛡️ Security Validation
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci --prefer-offline

      - name: 🛡️ Anthropic SDK Security Audit
        run: |
          # Specific audit for Anthropic SDK
          npm audit @anthropic-ai/sdk --json > anthropic-security-audit.json || true
          cat anthropic-security-audit.json
          
          # Check for known vulnerabilities
          npm audit --audit-level=moderate

      - name: 🔍 Code Security Scan
        run: |
          # Check for potential secrets in code
          echo "Scanning for potential API key exposure..."
          
          # Ensure no hardcoded API keys
          ! grep -r "sk-ant-" src/ || (echo "❌ Potential API key found" && exit 1)
          ! grep -r "ANTHROPIC_API_KEY.*=" src/ || (echo "❌ Potential API key exposure" && exit 1)
          
          # Check configuration security
          grep -q "process.env.ANTHROPIC_API_KEY" src/config/EnvironmentConfig.ts
          
          echo "✅ Security validation passed"

      - name: 📊 Upload security results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: anthropic-security-results
          path: |
            anthropic-security-audit.json
          retention-days: 30

  # ===================================================================
  # JOB 5: INTEGRATION SUCCESS STATUS
  # ===================================================================
  integration-success:
    name: ✅ Anthropic Integration Success
    runs-on: ubuntu-latest
    needs: [anthropic-validation, integration-modes, documentation-validation, security-validation]
    if: always()

    steps:
      - name: ✅ Check Integration Status
        run: |
          if [[ "${{ needs.anthropic-validation.result }}" != "success" ]]; then
            echo "❌ Anthropic validation failed"
            exit 1
          fi
          if [[ "${{ needs.integration-modes.result }}" != "success" ]]; then
            echo "❌ Integration modes testing failed"
            exit 1
          fi
          if [[ "${{ needs.documentation-validation.result }}" != "success" ]]; then
            echo "❌ Documentation validation failed"
            exit 1
          fi
          if [[ "${{ needs.security-validation.result }}" != "success" ]]; then
            echo "❌ Security validation failed"
            exit 1
          fi
          echo "✅ All Anthropic integration checks passed successfully!"

      - name: 📊 Integration Summary
        run: |
          echo "## 🤖 CES v2.7.0 Anthropic Integration Pipeline" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Enterprise Edition AI Features Validation" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status | Features Tested |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|-----------------|" >> $GITHUB_STEP_SUMMARY
          echo "| SDK Validation | ${{ needs.anthropic-validation.result == 'success' && '✅' || '❌' }} | TypeScript compilation, CLI interface |" >> $GITHUB_STEP_SUMMARY
          echo "| Integration Modes | ${{ needs.integration-modes.result == 'success' && '✅' || '❌' }} | Standalone/Integrated operation |" >> $GITHUB_STEP_SUMMARY
          echo "| Documentation | ${{ needs.documentation-validation.result == 'success' && '✅' || '❌' }} | v2.7.0 docs, language consistency |" >> $GITHUB_STEP_SUMMARY
          echo "| Security | ${{ needs.security-validation.result == 'success' && '✅' || '❌' }} | API key security, vulnerability scan |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎯 **Ready for production deployment with native Anthropic AI capabilities**" >> $GITHUB_STEP_SUMMARY