# 🔬 CodeQL Configuration for CES v2.7.0
# Advanced security analysis with Anthropic SDK focus

name: "CES CodeQL Configuration"

# 🔍 Query configuration
queries:
  - name: security-extended
    uses: security-extended
  - name: security-and-quality
    uses: security-and-quality
  - name: typescript-security
    uses: ./.github/codeql/queries/typescript-security.ql

# 📁 Analysis paths
paths:
  - ".src/**/*.ts"
  - ".src/**/*.js"
  - "scripts/**/*.js"
  - "scripts/**/*.sh"

# 🚫 Excluded paths
paths-ignore:
  - "node_modules/**"
  - ".dist/**"
  - "coverage/**"
  - "**/*.test.ts"
  - "**/*.spec.ts"
  - "**/*.d.ts"
  - "jest.config.js"
  - ".claude/**"

# 🔧 Analysis configuration
disable-default-path-filters: false
trap-caching: true

# 🎯 Language-specific configuration
typescript:
  # Include TypeScript-specific security patterns
  queries:
    - typescript-security
    - typescript-performance
  # Focus on enterprise patterns
  include:
    - "async-patterns"
    - "error-handling"
    - "type-safety"
    - "api-security"

javascript:
  # JavaScript security patterns
  queries:
    - javascript-security
    - node-security
  include:
    - "prototype-pollution"
    - "command-injection"
    - "path-traversal"
    - "xss-prevention"

# 🤖 Anthropic SDK specific patterns
custom-patterns:
  # API key security
  - name: "anthropic-api-key-exposure"
    pattern: |
      const apiKey = "sk-ant-"
      ANTHROPIC_API_KEY = "sk-ant-"
      process.env.ANTHROPIC_API_KEY = "sk-ant-"
    severity: "critical"
    message: "Potential Anthropic API key hardcoded"
  
  # Unsafe API usage
  - name: "anthropic-unsafe-usage"
    pattern: |
      client.messages.create({
        max_tokens: $MAX_TOKENS,
        messages: $USER_INPUT
      })
    severity: "high"
    message: "Potentially unsafe Anthropic API usage with user input"
  
  # Missing error handling
  - name: "anthropic-missing-error-handling"
    pattern: |
      await client.messages.create(*)
    severity: "medium"
    message: "Anthropic API call without proper error handling"

# 📊 Report configuration
report:
  format: "sarif"
  output: "codeql-results.sarif"
  include-source-snippets: true
  max-results: 1000

# 🎛️ Performance tuning
performance:
  timeout: "45m"
  threads: 0  # Use all available threads
  memory: "8G"